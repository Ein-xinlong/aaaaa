apply plugin: 'com.android.application'
apply plugin: 'jdrouter'

android {
    compileSdkVersion rootProject.ext.buildConfig.compileSdkVersion
    buildToolsVersion rootProject.ext.buildConfig.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.buildConfig.applicationId
        minSdkVersion rootProject.ext.buildConfig.minSdkVersion
        targetSdkVersion rootProject.ext.buildConfig.targetSdkVersion
        versionCode rootProject.ext.buildConfig.versionCode
        versionName rootProject.ext.buildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            // Filter for architectures supported by Flutter.
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
    }

    // 配置阿凡达构建
    signingConfigs {
        config {
            Properties props = new Properties()
            //需要定义keystore，在项目下的sign.properties配置路径 密码和别名，不要改动gradle脚本
            props.load(new FileInputStream(rootProject.file("sign.properties")))
            if (file(props['keystore']).exists()) {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            } else {
                println "WARNING !!! sign.properties not config,plz update signkey,don't forget "
                println "this is a debug key!! if you want to use your own,replace this file with yours"
                storeFile rootProject.file('debug.keystore')
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config  // 指定release签名
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config  // 指定debug签名
            //给applicationId添加后缀“.debug”
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // 数据绑定
    dataBinding {
        enabled true
    }
    // 区分pda和仓的渠道包
    flavorDimensions "pda"
    productFlavors {
        pda {
            buildConfigField "int", "APP_TYPE", "1"
        }
        cang {
            applicationIdSuffix ".cang"
            buildConfigField "int", "APP_TYPE", "2"
        }
    }
}

dependencies {
    // 主页面module
    implementation project(":PDAMain")
    // 登录module
    implementation project(":PDALogin")
    // 个人中心module
    implementation project(":PDAPersonal")
    // 库存调整module
    implementation project(":PDAInventory")
    // 效期调整module
    implementation project(":PDAValidity")
    // 盘点module
    implementation project(":PDACheck")
    // 收货module
    implementation project(":PDADelivery")
    // 商品查询module
    implementation project(":PDAGoodsQuery")
    // 库存查询module「仓相关」
    implementation project(":PDAInventoryCheck")
}